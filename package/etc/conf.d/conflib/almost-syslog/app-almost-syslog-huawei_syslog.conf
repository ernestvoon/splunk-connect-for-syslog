rewrite set_rfc3164_huawei_syslog{
    set-tag("wireformat:rfc3164_huawei_syslog");
};
filter f_is_rfc3164_huawei_syslog{
    tags("wireformat:rfc3164_huawei_syslog");
};

block parser app-almost-syslog-huawei_syslog() {
    channel {
        if ("`SC4S_DISABLE_DROP_INVALID_HUAWEI`" eq "yes") {
            parser {
                syslog-parser(
                    flags(assume-utf8, no-header)
                );
                # split msg and header right before the '%%', Huawei messages may
                # have a variable number of ' ' terminated values
                csv-parser(delimiters(chars('') strings(' %%'))
                        columns('header', 'message')
                        prefix('.tmp.')
                        flags(greedy));
                regexp-parser(
                    prefix(".values.")
                    patterns('^(%%(?<ver>\d+)(?<mod>\w+)\/(?<severity>[0-7])\/(?<brief>\w+)\((?<flag>l|t|d|s)\)\[(?<seq>\d+)\](?<seperator>[:])*(?<message>.*)'))
                    template("%%${.tmp.message}")
                );

            };
        } elif {
            parser {
                syslog-parser(
                    flags(assume-utf8, no-header)
                );
                # split msg and header right before the '%%', Huawei messages may
                # have a variable number of ' ' terminated values
                csv-parser(delimiters(chars('') strings(' %%'))
                        columns('header', 'message')
                        prefix('.tmp.')
                        flags(greedy, drop-invalid));
                regexp-parser(
                    prefix(".values.")
                    patterns('^(%%(?<ver>\d+)(?<mod>\w+)\/(?<severity>[0-7])\/(?<brief>\w+)\((?<flag>l|t|d|s)\)\[(?<seq>\d+)\](?<seperator>[:])*(?<message>.*)'))
                    template("%%${.tmp.message}")
                );

            };
        } else {};

        if {
            parser {
                regexp-parser(
                    prefix(".tmp.")
                    patterns('(?:[ ]|^(?<pri>\<\d+\>)|^)(?<host>(?<!\*)(?!\d{4,})(?:[0-9A-Za-z\-]{4,}|\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}))')
                    template('${.tmp.header}')
                );
            };
            rewrite {
                set(
                    "${.tmp.host}"
                    value("HOST")
                    condition("${.tmp.host}" ne "")
                );
            };
        };
        if {
            parser {
                regexp-parser(
                    prefix(".tmp.")
                    patterns('(?<timestatus>[\*\.])?(?:(?<timestamp>\d+-\d+-\d+T\d+:\d+:\d+(?:\.\d+)?(?:Z|[\+-] *\d+:\d+)|[A-Z][a-z]{2} [ 0123]\d(?: \d{4})? \d\d:\d\d:\d\d(?: [AP]M)?(?:\.\d\d\d))(?: (?<tz>[A-Za-z]{1,4}T))?)')
                    template('${.tmp.header}')
                );
            };
            if {
                filter {
                    "${.tmp.timestatus}" eq "."
                    or "${.tmp.timestatus}" eq "*"
                };
                rewrite {
                    set("0" value("fields.timesync"));
                };
            } else {
                rewrite {
                    set("1" value("fields.timesync"));
                };
            };
            parser { date-parser-nofilter(format(
                '%b %e %H:%M:%S.%f',
                '%b %e %H:%M:%S',
                '%b %e %I:%M:%S %p.%f',
                '%b %e %I:%M:%S %p',
                '%b %e %Y %I:%M:%S %p.%f'
                '%b %e %Y %H:%M:%S.%f',
                '%b %e %Y %H:%M:%S',
                '%Y-%m-%dT%T%z',
                )
                template("${.tmp.timestamp}"));
            };
        }  else {};

        if ("`SC4S_ENABLE_HUAWEI_IOS_RAW_MSG`" eq "yes") {
            rewrite {
                r_set_splunk_dest_default(
                    index('netops')
                    sourcetype('huawei:vrp')
                    vendor('huawei')
                    product('vrp')
                );
            };
        } elif {
            rewrite {
                r_set_splunk_dest_default(
                    index('netops')
                    sourcetype('huawei:vrp')
                    vendor('huawei')
                    product('vrp')
                );
                set('%%${.tmp.message}' value("MESSAGE"));
            };
        } else {};
        
        rewrite(set_rfc);
        rewrite(set_rfc3164);
        rewrite(set_rfc3164_huawei_syslog);
        rewrite(r_set_source_identified);

    };
};
application app-almost-syslog-huawei_syslog[sc4s-almost-syslog] {
	filter {
        message(' %%' type(string) flags(substring));
    };	

    parser { app-almost-syslog-huawei_syslog(); };


};
